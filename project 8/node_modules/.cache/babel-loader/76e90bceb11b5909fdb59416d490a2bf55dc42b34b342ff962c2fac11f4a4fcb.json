{"ast":null,"code":"var _jsxFileName = \"/Users/deligence/Documents/REACT/project 8/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from './components/AddMovie';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-c2442-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          title: data[key].re,\n          openingText: data[key].openingText\n        });\n      }\n      console.log(data);\n      const transformedMovies = data.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-c2442-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    // console.log(movie);\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 16\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","re","openingText","console","log","transformedMovies","map","movieData","episode_id","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/deligence/Documents/REACT/project 8/src/App.js"],"sourcesContent":["import React, { useState , useEffect ,useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from './components/AddMovie';\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async() => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-c2442-default-rtdb.firebaseio.com/movies.json\");\n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n\n      const loadedMovies = [];\n      for (const key in data){\n        loadedMovies.push({\n          id:key,\n          title:data[key].title,\n          title:data[key].re,\n          openingText:data[key].openingText,\n        })\n      } \n\n      console.log(data);\n      const transformedMovies = data.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n        \n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  },[]);\n  \n  useEffect(()=>{\n    fetchMoviesHandler();\n  },[fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-c2442-default-rtdb.firebaseio.com/movies.json',{\n      method:'POST',\n      body:JSON.stringify(movie),\n      headers:{\n        'Content-type':'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);  \n    // console.log(movie);\n  }\n\n  let content =<p>Found no movies.</p>\n  if(movies.length > 0){\ncontent = <MoviesList movies={movies} />\n  }\n  if(error){\n    content =<p>{error}</p>\n  }\n  if(isLoading){\n    content = <p>Loading...</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n  {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}