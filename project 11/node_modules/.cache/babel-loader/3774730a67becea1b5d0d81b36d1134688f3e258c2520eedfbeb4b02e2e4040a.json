{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputstate = {\n  value: \"\",\n  isTouched: false\n};\nconst inputSateReducer = (state, action) => {\n  return inputSateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputstate, dispatch] = useReducer(inputSateReducer, initialInputstate);\n  const valueIsValid = validateValue(inputstate.value);\n  const hasError = !valueIsValid && inputstate.isTouched;\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"1l/pZatvxbUiXbCfYqp3SksA4BU=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputstate","value","isTouched","inputSateReducer","state","action","useInput","validateValue","_s","inputstate","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","target","inputBlurHandler","reset","setEnteredValue","setIsTouched","enteredValue","isValid"],"sources":["/Users/deligence/Documents/REACT/project 11/src/hooks/UseInput.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputstate = {\n  value: \"\",\n  isTouched: false,\n};\nconst inputSateReducer = (state, action) => {\n    return inputSateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputstate,dispatch] = useReducer(inputSateReducer, initialInputstate);\n\n  const valueIsValid = validateValue(inputstate.value);\n  const hasError = !valueIsValid && inputstate.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatch({type : 'INPUT' , value:event.target.value})\n};\nconst inputBlurHandler = (event) => {\n    dispatch({type : 'INPUT' , value:event.target.value})\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\nexport default useInput;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,OAAOF,gBAAgB;AAC3B,CAAC;AAED,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAACC,QAAQ,CAAC,GAAGX,UAAU,CAACI,gBAAgB,EAAEH,iBAAiB,CAAC;EAE7E,MAAMW,YAAY,GAAGJ,aAAa,CAACE,UAAU,CAACR,KAAK,CAAC;EACpD,MAAMW,QAAQ,GAAG,CAACD,YAAY,IAAIF,UAAU,CAACP,SAAS;EAEtD,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IACpCJ,QAAQ,CAAC;MAACK,IAAI,EAAG,OAAO;MAAGd,KAAK,EAACa,KAAK,CAACE,MAAM,CAACf;IAAK,CAAC,CAAC;EACzD,CAAC;EACD,MAAMgB,gBAAgB,GAAIH,KAAK,IAAK;IAChCJ,QAAQ,CAAC;MAACK,IAAI,EAAG,OAAO;MAAGd,KAAK,EAACa,KAAK,CAACE,MAAM,CAACf;IAAK,CAAC,CAAC;EACvD,CAAC;EACD,MAAMiB,KAAK,GAAGA,CAAA,KAAM;IAClBC,eAAe,CAAC,EAAE,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IACLnB,KAAK,EAAEoB,YAAY;IACnBC,OAAO,EAAEX,YAAY;IACrBC,QAAQ;IACRC,kBAAkB;IAClBI,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CAxBIF,QAAQ;AAyBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}