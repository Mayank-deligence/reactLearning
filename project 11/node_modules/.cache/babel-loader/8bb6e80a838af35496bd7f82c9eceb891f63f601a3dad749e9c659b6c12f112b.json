{"ast":null,"code":"var _jsxFileName = \"/Users/deligence/Documents/REACT/project 11/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/UseInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: fistName,\n    isValid: firstNameIsValid,\n    hasError: firstInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: lastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetNameInput();\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredEmail);\n    resetEmailInput();\n  };\n  const nameInputclasses = nameInputHasError ? \"form-control invalid\" : \"form-control \";\n  const emailInputclasses = emailInputHasError ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"last\",\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"LAST Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"cLdKk8F9nnoUIPAu7vNVo8lAaWE=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","value","fistName","isValid","firstNameIsValid","hasError","firstInputHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","trim","lastName","enteredLastNameIsValid","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","enteredNameIsValid","formSubmissionHandler","event","preventDefault","console","log","enteredName","resetNameInput","nameInputclasses","nameInputHasError","emailInputclasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","nameChangeHandler","onBlur","nameBlurHandler","disabled","_c","$RefreshReg$"],"sources":["/Users/deligence/Documents/REACT/project 11/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/UseInput\";\n\nconst BasicForm = (props) => {\n  const {\n    value: fistName,\n    isValid: firstNameIsValid,\n    hasError: firstInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: lastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetNameInput();\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredEmail);\n    resetEmailInput();\n  };\n\n  const nameInputclasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control \";\n  const emailInputclasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputclasses}>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n          {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input\n          type=\"text\"\n          id=\"last\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n          {nameInputHasError && (\n          <p className=\"error-text\">LAST Name must not be empty</p>\n        )}\n        </div>\n      </div>\n      <div className={emailInputclasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Email must not be empty</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}